mainmodule kmean{
    initnode void registerRedKmeans(void); //for custom reduction

    mainchare Main{
        entry Main(CkArgMsg* m);
        //entry [reductiontarget] void UpdateCoords(int size, double coords[size]);//for reduction in multiple steps
        //entry [reductiontarget] void UpdateCounts(int counts[size], int size);//
        entry [reductiontarget] void kmeansReductionTets(CkReductionMsg* msg);//for reduction in single step
        entry [reductiontarget] void UpdateAndStep(CkReductionMsg* msg);
    };

    array [1d] Points{
        entry Points(int M,int N, int K, CProxy_Main m);
        entry void Assign(double kmeans[2*k], int k);
        entry void reductionTest(int k);
    }
}